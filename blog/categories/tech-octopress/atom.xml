<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech-octopress | 丘海东]]></title>
  <link href="https://qiuhaidong.github.io/blog/categories/tech-octopress/atom.xml" rel="self"/>
  <link href="https://qiuhaidong.github.io/"/>
  <updated>2022-02-26T20:07:30+08:00</updated>
  <id>https://qiuhaidong.github.io/</id>
  <author>
    <name><![CDATA[丘海东]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress 自动打开文件 插入本地图片 程序]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/11/octopress-new-post-auto-open/"/>
    <updated>2022-01-11T22:42:33+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/11/octopress-new-post-auto-open</id>
    <content type="html"><![CDATA[<p><a href="http://blog.lessfun.com/blog/2013/12/05/config-the-octopress-blog-after-deployed/">教程</a></p>

<h3>添加功能：自动打开文件编辑</h3>

<p><code>rake new_post["file name"]</code> 后自动打开博客文件<br/>
编辑<code>Rakefile</code>文件，上面位置，添加定义：<br/>
<code>
    editor = "gedit"
</code>
然后在<code>new_post</code>命令后面添加：<br/>
<code>
if #{editor}
  system "#{editor} #{filename}"
end
</code></p>

<h3>插入本地图片</h3>

<p>将图片放到<code>octopress/source/images/</code>下，然后在Markdown文件中可直接引用，用法：</p>

<pre><code>格式显示有问题，请看原文，或下面的图片<img src="/images/麦迪科比.jpg">
</code></pre>

<p><img src="/images/自动打开-本地图片-程序.png"><br/>
<img src="/images/麦迪科比.jpg"></p>

<h4>前后行3个```显示代码，且有显示行数</h4>

<pre><code>c++
int main()
{
    cout&lt;&lt;"hello world"&lt;&lt;endl;
};
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 2.0 Test on Ubuntu 20.04]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/11/octopress-2.0-test-on-ubuntu-20.04/"/>
    <updated>2022-01-11T07:52:12+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/11/octopress-2.0-test-on-ubuntu-20.04</id>
    <content type="html"><![CDATA[<pre><code>rvm install 2.3.1  
</code></pre>

<p>失败<br/>
.</p>

<pre><code>cd octopress
</code></pre>

<p>.</p>

<pre><code>ruby --version
</code></pre>

<p>.</p>

<pre><code>rvm use 2.7.0
Required ruby-2.7.0 is not installed.
To install do: 'rvm install "ruby-2.7.0"'  
</code></pre>

<h1>记得是用2.7.0</h1>

<p> .</p>

<pre><code>dong@Ubuntu:~/octopress$ rvm install "ruby-2.7.0"  
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ ruby --version
ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ rake generate
Could not find rake-10.5.0 in any of the sources
Run `bundle install` to install missing gems.
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ bundle install
Traceback (most recent call last):
4: from /home/dong/.rvm/rubies/ruby-2.7.0/bin/ruby_executable_hooks:22:in `&lt;main&gt;'
3: from /home/dong/.rvm/rubies/ruby-2.7.0/bin/ruby_executable_hooks:22:in `eval'
2: from /home/dong/.rvm/rubies/ruby-2.7.0/bin/bundle:23:in `&lt;main&gt;'
1: from /home/dong/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems.rb:294:in `activate_bin_path'
/home/dong/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems.rb:275:in `find_spec_for_exe': Could not find 'bundler' (1.17.3) required by your /home/dong/octopress/Gemfile.lock. (Gem::GemNotFoundException)
To update to the latest version installed on your system, run `bundle update --bundler`.
To install the missing version, run `gem install bundler:1.17.3`
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ gem install bundler:1.17.3
Fetching bundler-1.17.3.gem
Successfully installed bundler-1.17.3
Parsing documentation for bundler-1.17.3
Installing ri documentation for bundler-1.17.3
Done installing documentation for bundler after 3 seconds
1 gem installed
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ rake generate
Could not find rake-10.5.0 in any of the sources
Run `bundle install` to install missing gems.
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ bundle install
</code></pre>

<p>.</p>

<pre><code>dong@Ubuntu:~/octopress$ rake generate
rake aborted!
Gem::LoadError: You have already activated rake 13.0.1, but your Gemfile requires rake 10.5.0. Prepending `bundle exec` to your command may solve this.
/home/dong/octopress/Rakefile:2:in `&lt;top (required)&gt;'
(See full trace by running task with --trace)
</code></pre>

<p>提示失败，<br/>
但是可以加上<code>bundle exec</code></p>

<pre><code>dong@Ubuntu:~/octopress$bundle exec rake generate
</code></pre>

<p>很多警告，但是成了，<br/>
下面也一样：</p>

<pre><code>bundle exec rake preview
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 16.04 Install Octopress 2.0]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/11/ubuntu-16.04-install-octopress-2.0/"/>
    <updated>2022-01-11T00:17:21+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/11/ubuntu-16.04-install-octopress-2.0</id>
    <content type="html"><![CDATA[<p>ubuntu20.04安装了几次2.0都失败<br/>
ubuntu12.04已经无法安装系统本身的更新了，更别说安装其他软件<br/>
强迫症发作，于是有了这次：</p>

<h3>列出大致步骤吧，主要是有些error要如何解决</h3>

<h2>git</h2>

<h3>install git</h3>

<pre><code>git --version
sudo apt install git
git --version
</code></pre>

<h3>set up git</h3>

<h4>Username</h4>

<p>github用户名</p>

<pre><code>git config --global user.name "qiuhaidong"
#or haydnyau
</code></pre>

<h4>Email</h4>

<p>github登录帐号邮箱名</p>

<pre><code>git config --global user.email "690982322@qq.com"
#or 1148891016@qq.com
</code></pre>

<p>Password caching</p>

<p>To use this option, you need to turn on the credential helper so that git will save your password in memory for some time:</p>

<pre><code>git config --global credential.helper cache
</code></pre>

<h3>添加 SSH Keys</h3>

<h4>Step 1: Check for SSH keys</h4>

<p>First, we need to check for existing ssh keys on your computer. Open up Terminal and run:</p>

<pre><code>cd ~/.ssh
# Checks to see if there is a directory named ".ssh" in your user directory
</code></pre>

<p>If it says “No such file or directory” go to step 2. Otherwise, you already have an existing keypair, and you can skip to step 3.</p>

<p><strong>最好就是把 .shh 这个文件夹删除了，做step 2</strong></p>

<h4>Step 2: Generate a new SSH key</h4>

<p>To generate a new SSH key, enter the code below. We want the default settings so when asked to enter a file in which to save the key, <strong>just press enter</strong>.不要输入文件名</p>

<pre><code>ssh-keygen -t rsa -C "your_email@example.com"
我的就是：ssh-keygen -t rsa -C "690982322@qq.com"
#or 1148891016@qq.com
</code></pre>

<p>Now you need to enter a passphrase.设置密码。（有人是密码都不要的，再按两下enter就行了）</p>

<p>Which should give you something like this:</p>

<pre><code>Your identification has been saved in /home/you/.ssh/id_rsa.
Your public key has been saved in /home/you/.ssh/id_rsa.pub.
The key fingerprint is:
01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com
</code></pre>

<h3>Step 3: Add your SSH key to GitHub</h3>

<p>ctrl+h，显示隐藏文件，这里其实可以打开这个<strong>id_rsa.pub</strong>文件，直接复制，不用安装下面的软件</p>

<pre><code>sudo apt-get install xclip
# Downloads and installs xclip.

xclip -sel clip &lt; ~/.ssh/id_rsa.pub
# Copies the contents of the id_rsa.pub file to your clipboard
</code></pre>

<h4>Add your SSH key to GitHub</h4>

<p>到github网站，登陆，头像，设置，SSH and GPG keys，把旧的SSH keys删除，添加新的，title不用管，粘贴到key就行了</p>

<h3>Step 4: Test</h3>

<pre><code>ssh -T git@github.com
</code></pre>

<p>这里可能会还要按照提示做一下，不难，看英文做</p>

<p>如果看到：</p>

<pre><code>Hi qiuhaidong! You've successfully authenticated, but GitHub does not provide shell access.
# or haydnyau
</code></pre>

<p>If that username is correct, you’ve successfully set up your SSH key. Don’t worry about the shell access thing, you don’t want that anyway.</p>

<p>If you see “<strong>access denied</strong>” please consider using HTTPS instead of SSH. If you need SSH start at these instructions for diagnosing the issue.</p>

<h4>如果不成功，用https的认证方式代替ssh，因为github觉得ssh不安全，认证方式有时会改变</h4>

<h2>RVM</h2>

<p>看官网命令</p>

<pre><code>rvm --version
gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
</code></pre>

<p>会显示失败，先不管它<br/>
Install RVM：命令</p>

<pre><code>curl -sSL https://get.rvm.io | bash -s stable
</code></pre>

<p>如下：</p>

<pre><code>dong@Ubuntu:~$ curl -sSL https://get.rvm.io | bash -s stable
Downloading https://github.com/rvm/rvm/archive/1.29.12.tar.gz
Downloading https://github.com/rvm/rvm/releases/download/1.29.12/1.29.12.tar.gz.asc
gpg: 于 2021年01月16日 星期六 02时46分22秒 CST 创建的签名，使用 RSA，钥匙号 39499BDB
gpg: 无法检查签名：没有公钥
GPG signature verification failed for '/home/dong/.rvm/archives/rvm-1.29.12.tgz' - 'https://github.com/rvm/rvm/releases/download/1.29.12/1.29.12.tar.gz.asc'! Try to install GPG v2 and then fetch the public key:
    gpg2 --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
or if it fails:
    command curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -
    command curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import -
In case of further problems with validation please refer to https://rvm.io/rvm/security
</code></pre>

<p>这个提示错误，并且给出了解决方法：<br/>
运行：<br/>
命令1：</p>

<pre><code>curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -
</code></pre>

<p>命令2：</p>

<pre><code>curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import -
</code></pre>

<p>再运行上一条命令安装rvm：</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable
</code></pre>

<p>输出：</p>

<pre><code>  * To start using RVM you need to run `source /home/dong/.rvm/scripts/rvm`
</code></pre>

<p>安装成功，按照提示运行：</p>

<pre><code>source /home/dong/.rvm/scripts/rvm
</code></pre>

<p>测试：</p>

<pre><code>rvm --version
git --version
</code></pre>

<p>安装ruby2.2.6（1.9.3太久了，无法安装）</p>

<pre><code>rvm install 2.2.6
</code></pre>

<p>会提示输入本机密码</p>

<pre><code>rvm use 2.2.6
</code></pre>

<h3>Setup Octopress</h3>

<pre><code>git clone -b source git@github.com:qiuhaidong/qiuhaidong.github.com.git octopress
# 或者 git clone git://github.com/imathis/octopress.git octopress
# octopress  2.0 原码
cd octopress
</code></pre>

<h4>install dependencies</h4>

<pre><code>gem install bundler
</code></pre>

<h4>会提示失败，按提示加上版本号，安装适合本系统的</h4>

<pre><code>bundle install
</code></pre>

<h4>Install the default Octopress theme</h4>

<pre><code>rake install
</code></pre>

<h4>Deploying to Github Pages</h4>

<pre><code>rake setup_github_pages
</code></pre>

<p>这里可能会要输入链接等，ssh，https</p>

<p>The rake task will ask you for a URL of the Github repo. Copy the SSH or HTTPS URL from your newly created repository <br/>
(e.g. git@github.com:username/username.github.io.git) <br/>
git@github.com:qiuhaidong/qiuhaidong.github.com.git<br/>
<a href="https://github.com/qiuhaidong/qiuhaidong.github.com.git">https://github.com/qiuhaidong/qiuhaidong.github.com.git</a><br/>
or<br/>
git@github.com:haydnyau/haydnyau.github.io.git<br/>
<a href="https://github.com/haydnyau/haydnyau.github.io.git">https://github.com/haydnyau/haydnyau.github.io.git</a><br/>
and paste it in as a response.</p>

<p>This will:</p>

<ol>
<li>Ask for and store your Github Pages repository url.</li>
<li>Rename the remote pointing to imathis/octopress from &lsquo;origin&rsquo; to &lsquo;octopress&rsquo;</li>
<li>Add your Github Pages repository as the default origin remote.</li>
<li>Switch the active branch from master to source.</li>
<li>Configure your blog&rsquo;s url according to your repository.</li>
<li>Setup a master branch in the _deploy directory for deployment.</li>
</ol>


<p>Next run:</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>This will generate your blog, copy the generated files into <code>_deploy/</code>, add them to git, commit and push them up to the master branch. In a few seconds you should get an email from Github telling you that your commit has been received and will be published on your site.</p>

<hr />

<hr />

<p>来自官网<br/>
<strong>下面这个不知道要不要做：</strong><br/>
Now you have a place to commit the generated content for your site, but you should also set up repository to store the source for your blog. After you set up a repository for your blog source, add it as the origin remote.</p>

<pre><code>git remote add origin (your repo url)
# set your new origin as the default branch
git config branch.master.remote origin
</code></pre>

<p>Now push your changes and you&rsquo;ll be all set.<br/>
<strong>上面这个不知道要不要做：</strong><br/>
来自官网</p>

<hr />

<hr />

<p><strong>Don&rsquo;t forget</strong> to commit the source for your blog.</p>

<pre><code>git add .
git commit -m 'update'
git push origin source
</code></pre>

<h3>Configuring Octopress</h3>

<h4>edit _config.yml</h4>

<pre><code>url:                # 不管
title:              # 丘海东
subtitle:           # Haydn Yau
author:             # 丘海东
paginate: 10          # 主页文章数
recent_posts: 20       # 主页显示最近文字标题数

# list each of the sidebar modules you want to include, in the order you want them to appear.
# To add custom asides, create files in /source/_includes/custom/asides/ and add them to the list like 'custom/asides/custom_aside_name.html'
default_asides: [asides/category_list.html注意，这里添加侧边栏，看另一篇博文, asides/recent_posts.html, asides/github.html]

github_user: haydnyau
</code></pre>

<h4>一些命令：</h4>

<pre><code>rake new_post["title"]
rake generate
rake preview
rake deploy
</code></pre>

<h4>pull.sh</h4>

<pre><code>#!/bin/sh
cd /home/dong/octopress
git pull origin source
rake generate deploy
</code></pre>

<h4>push.sh</h4>

<pre><code>#!/bin/sh
cd /home/dong/octopress
rake generate deploy
git add .
git commit -m 'update'
git push origin source
</code></pre>

<p><strong>记得右键，属性，权限，程序执行文件</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[侧边栏增加分类 Category]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/10/add-category/"/>
    <updated>2022-01-10T23:00:59+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/10/add-category</id>
    <content type="html"><![CDATA[<h3>三步</h3>

<h2>Step 1</h2>

<h3>添加 <code>category_list</code> 插件</h3>

<p>在 <code>octopress\plugins\</code> 文件夹里面，新建一个文件，名为：<code>category_list_tag.rb</code>。并将下面的代码粘贴到里面。</p>

<pre><code>module Jekyll
  class CategoryListTag &lt; Liquid::Tag
    def render(context)
      html = ""
      categories = context.registers[:site].categories.keys
      categories.sort.each do |category|
        posts_in_category = context.registers[:site].categories[category].size
       category_dir = context.registers[:site].config['category_dir']
        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='https://qiuhaidong.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
      end
      html
    end
  end
end

Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></pre>

<p>这个插件会向<code>liquid</code>注册一个名为<code>category_list</code>的<code>tag</code>，该<code>tag</code>就是以<code>li</code>的形式将站点所有的<code>category</code>组织起来。如果要将<code>category</code>加入到侧边导航栏，需要增加一个<code>aside</code>。</p>

<h2>Step 2</h2>

<h3>增加 <code>aside</code></h3>

<p>在 <code>octopress\source\_includes\asides\</code> 文件夹里面，新建一个文件，名为：<code>category_list.html</code> 。并粘贴下面的代码：</p>

<p><strong>注意</strong>： 去掉 <code>%</code> 前面的2个 <code>\</code><br/>
这里如果不加上<code>\</code>，markdown格式会显示<code>category_list</code>的内容。我是为了正确显示代码才加上的</p>

<pre><code>&lt;section&gt;
  &lt;h1&gt;Categories&lt;/h1&gt;
  &lt;ul id="categories"&gt;
    {\% category_list \%}
  &lt;/ul&gt;
&lt;/section&gt;
</code></pre>

<h2>Step 3</h2>

<h3><code>_config.yml</code> 文件 ，修改 <code>default_asides</code></h3>

<p>打开 <code>octopress\_config.yml</code> 文件，修改里面的 <code>default_asides</code> 这一行，将 <code>asides/category_list.html</code> 添加进去。</p>

<pre><code>default_asides: [asides/category_list.html, ......]
</code></pre>

<p>这里可以修改侧边栏的顺序</p>

<h2>ok</h2>

<p><a href="http://www.aobosir.com/blog/2016/10/12/octopress-build-static-blog-site-add-categories-list-for-site-sidebar/">原博</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[没有正确路径或权限上传，push]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/10/can-not-push/"/>
    <updated>2022-01-10T22:42:18+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/10/can-not-push</id>
    <content type="html"><![CDATA[<p>代码如下：</p>

<pre><code>dong@Ubuntu:~/octopress$ git push origin source

ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights and the repository exists.
</code></pre>

<p>打开文件~/octopress/.git/config，查看</p>

<pre><code>[remote "origin"]
    url = git@github.com:haydnyau/haydnyau.github.io.git
</code></pre>

<p>我是改了几次，com.git和io.git搞错了</p>

<p><a href="https://blog.csdn.net/weixin_40886892/article/details/80725071">和我同样问题的网友</a></p>

<p><a href="https://blog.csdn.net/meng_lemon/article/details/88963157">另一个网友的类似问题</a></p>
]]></content>
  </entry>
  
</feed>
