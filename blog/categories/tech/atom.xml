<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | 丘海东]]></title>
  <link href="https://qiuhaidong.github.io/blog/categories/tech/atom.xml" rel="self"/>
  <link href="https://qiuhaidong.github.io/"/>
  <updated>2023-06-17T12:27:14+08:00</updated>
  <id>https://qiuhaidong.github.io/</id>
  <author>
    <name><![CDATA[丘海东]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntu安装deb文件]]></title>
    <link href="https://qiuhaidong.github.io/blog/2023/06/16/install-deb/"/>
    <updated>2023-06-16T01:38:49+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2023/06/16/install-deb</id>
    <content type="html"><![CDATA[<p>Ubuntu下安装deb包的命令总结</p>

<p><a href="https://blog.csdn.net/cui_shuang_xi/article/details/90904929">原文链接</a></p>

<p>在Ubuntu下安装deb包需要使用dpkg命令.</p>

<p>Dpkg 的普通用法：</p>

<pre><code>sudo dpkg -i &lt;package.deb&gt;  
</code></pre>

<p>安装一个 Debian 软件包，如你手动下载的文件。</p>

<pre><code>sudo dpkg -c &lt;package.deb&gt;  
</code></pre>

<p>列出 &lt;package.deb> 的内容。</p>

<pre><code>sudo dpkg -I &lt;package.deb&gt;  
</code></pre>

<p>从 &lt;package.deb> 中提取包裹信息。</p>

<pre><code>sudo dpkg -r  
</code></pre>

<p>移除一个已安装的包裹。</p>

<pre><code>sudo dpkg -P  
</code></pre>

<p>完全清除一个已安装的包裹。和 remove 不同的是，remove 只是删掉数据和可执行文件，purge 另外还删除所有的配制文件。</p>

<pre><code>sudo dpkg -L  
</code></pre>

<p>列出 安装的所有文件清单。同时请看 dpkg -c 来检查一个 .deb 文件的内容。</p>

<pre><code>sudo dpkg -s  
</code></pre>

<p>显示已安装包裹的信息。同时请看 apt-cache 显示 Debian 存档中的包裹信息，以及 dpkg -I 来显示从一个 .deb 文件中提取的包裹信息。</p>

<pre><code>sudo dpkg-reconfigure  
</code></pre>

<p>重新配制一个已经安装的包裹，如果它使用的是 debconf (debconf 为包裹安装提供了一个统一的配制界面)。</p>

<p>如果安装过程中出现问题,可以先使用命令:</p>

<pre><code>sudo apt-get update  
</code></pre>

<p>更新后再执行上面的命令.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lightdm Ubuntu 桌面显示管理器]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/05/20/lightdm/"/>
    <updated>2022-05-20T14:17:18+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/05/20/lightdm</id>
    <content type="html"><![CDATA[<p>转载于：<a href="https://www.cnblogs.com/SimbaBao/p/5791458.html">ubuntu中lightdm以及不能看到界面的一些解决方案</a></p>

<p>在解决了我的ubuntu界面密码登录无限循环的问题后，终于可以用google深入的了解一下了，从之前的了解得知，ubuntu在X版本后使用了lightDM一个全新的linux桌面显示管理器，在wiki中对LightDM的描述中，LightDM配置在以下文件夹中：<br/>
（1）<code>/usr/share/lightdm/lightdm.conf.d/*.conf</code><br/>
（此为系统提供的配置文件，用户不可编辑）<br/>
（2）<code>/etc/lightdm/lightdm.conf.d/*.conf</code><br/>
（3）<code>/etc/lightdm/lightdm.conf</code><br/>
（2、3这两个配置文件，系统管理员可以覆写）<br/>
在此之后看到了一个关于解决不能看见界面的办法：<br/>
（1）使用<code>Ctrl+alt+F1</code>，进入文本终端<br/>
（2）<code>sudo stop lightdm</code> ，停止lightdm界面<br/>
（3）<code>sudo start lightdm</code> ，开始lightdm界面<br/>
（4）<code>sudo start gdm</code> ，登录gdm管理器<br/>
（5）<code>sudo dpkg-reconfigure lightdm</code> ，设置管理器的系统默认值<br/>
注：本文部分资料参阅<a href="https://wiki.ubuntu.com/LightDM">https://wiki.ubuntu.com/LightDM</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SONY Xperia 1 IV]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/05/12/sony-xperia-1-iv/"/>
    <updated>2022-05-12T23:32:47+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/05/12/sony-xperia-1-iv</id>
    <content type="html"><![CDATA[<h3>設計，做工，質感</h3>

<p><img src="http://r.photo.store.qq.com/psc?/V53xBhKC4JFvE03uTNAL1QWxNF3K6JJT/bqQfVz5yrrGYSXMvKr.cqROdOmbClZ*DMdJPsPnN1L5YrvF2xOQnc.Eeikb6M7zu4Cf8WHI2W5cq1htROaCNLuGCktplDnxcKGziF2wcajo!/r" alt="SONY Xperia 1 IV" /></p>

<p><a href="https://video.sonystyle.com.cn/customerTrans/5c3f07699e9c757a4d576bb240fa61e0/efe5091-180a8436cc4-0003-cd2e-0e7-91d59.mp4">SONY Xperia 1 IV 官方宣傳視頻</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You Can Use the Sass-convert Command to Automatically Fix Most cases---Ruby 不同版本]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/03/26/you-can-use-the-sass-convert-command-to-automatically-fix-most-cases/"/>
    <updated>2022-03-26T01:05:55+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/03/26/you-can-use-the-sass-convert-command-to-automatically-fix-most-cases</id>
    <content type="html"><![CDATA[<p>octopress-2.0，ruby-<strong>2.3.1</strong>，ubuntu20.04，可以运行（修改这里后）<br/>
octopress-2.0，ruby-<strong>2.5.9</strong>，ubuntu20.04，可以运行（修改这里后）<br/>
octopress-2.0，ruby-<strong>2.6.9</strong>，ubuntu20.04，可以运行（修改这里后）<br/>
octopress-<strong>3.0</strong>，ruby-<strong>2.5.9</strong>，ubuntu20.04，可以运行（無需修改）<br/>
octopress-<strong>3.0</strong>，ruby-<strong>2.6.9</strong>，ubuntu20.04，可以运行（無需修改）</p>

<p>換了版本要重新安裝octopress3.0：</p>

<pre><code>gem install octopress
</code></pre>

<p>octopress-2.0-3.0，ruby-<strong>3.1.1</strong>，ubuntu20.04，都無法运行。</p>

<p><a href="https://stackoverflow.com/questions/35949660/compass-sass-deprecation-warning">原网页</a><br/>
<a href="http://cache.baiducontent.com/c?m=Xxdd763vX7YjRNeeOiILGLerW1Lrc_ceIQ3hCNMB9gwdzDHZoy_PikcN75GYpR9DFB3vxBUcejQkaSvlN3gZEfAPpNN-08FVQIDyZHTNJgPwSgoB3NKL4_GS4nx_XrCC-BUaRNwAuECMpWgq8wxzkIpLErbpEqlwK68Qi6soQwepLTgid54lohbxMlnl6PQpNH2t__da7lDpAsRwCb6EY-y40SooyRN5jX-9ufBiajUS0lec_A47rZ0vRgOYP12W&amp;p=8d7d8e0285cc43dd08e297780f568f&amp;newp=c273c00586cc42a95aa9c7710f408f231610db2151d3da146b82c825d7331b001c3bbfb42220150ed3c6796204af4259e8f033783d0923a3dda5c91d9fb4c57479cc&amp;s=2a38a4a9316c49e5&amp;user=baidu&amp;fm=sc&amp;query=You+can+use+the+sass%2Dconvert+command+to+automatically+fix+most+cases%2E&amp;qid=c0e3498b0000d650&amp;p1=1">百度缓存网页</a></p>

<p>I just installed and Compass &amp; Sass as described here.</p>

<p>I got the following warning when I ran <code>compass watch</code> for the first time. What exactly does it mean? What should I do to fix it, do I need to do anything?</p>

<pre><code>$ (master) compass watch
&gt;&gt;&gt; Compass is watching for changes. Press Ctrl-C to Stop.
DEPRECATION WARNING on line 87 of /Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/css3/_deprecated-support.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote('"$moz-"#{$experimental-support-for-mozilla} "$webkit-"#{$experimental-support-for-webkit} "$opera-"#{$experimental-support-for-opera} "$microsoft-"#{$experimental-support-for-microsoft} "$khtml-"#{$experimental-support-for-khtml}')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 92 of /Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.3/stylesheets/compass/css3/_deprecated-support.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote('"$ie6-"#{$legacy-support-for-ie6} "$ie7-"#{$legacy-support-for-ie7} "$ie8-"#{$legacy-support-for-ie8}')

You can use the sass-convert command to automatically fix most cases.

    write css/styles.css
</code></pre>

<h4>1 Answer :</h4>

<p>To fix the error message, just change the <strong><em>line 87</em></strong> from your &ldquo;<strong>_deprecated-support.scss</strong>&rdquo; file to this:</p>

<pre><code>    // A debug tool for checking browser support
@mixin debug-support-matrix($experimental: true, $ie: true) {
    @debug '#{"$moz-"}$experimental-support-for-mozilla'
                 '#{"$webkit-"}$experimental-support-for-webkit'
                 '#{"$opera-"}$experimental-support-for-opera'
                 '#{"$microsoft-"}$experimental-support-for-microsoft'
                 '#{"$khtml-"}$experimental-support-for-khtml';
    @debug '#{"$ie6-"}$legacy-support-for-ie6'
                 '#{"$ie7-"}$legacy-support-for-ie7'
                 '#{"$ie8-"}$legacy-support-for-ie8';
}
</code></pre>

<p>The file can be found at your <strong>/home/dong/.rvm/gems/ruby-2.3.1/gems/compass-core-1.0.3/stylesheets/compass/css3/_deprecated-support.scss</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu2022年无法添加引导windows，官方禁用OS Prober]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/15/ubuntu-cannot-boot-windows/"/>
    <updated>2022-01-15T15:34:36+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/15/ubuntu-cannot-boot-windows</id>
    <content type="html"><![CDATA[<h3><a href="https://www.oschina.net/news/174751/ubuntu-22.04-multi-boot-changes">原博：OS Prober 被禁用，Ubuntu 正在考虑新的多重引导方案</a></h3>

<p>GNU GRUB（GRUB）是一个来自 GNU 项目的启动引导程序。它允许用户在计算机内同时拥有多个操作系统，并在计算机启动时选择希望运行的操作系统。</p>

<p>今年 6 月，由于上游 GRUB 引导程序在发布 2.06 版本时禁用 OS_Prober 后所带来的一些变化，Ubuntu 的开发者正在考虑如何在 Ubuntu 22.04 LTS 中管理双引导/多引导方案。</p>

<p>Ubuntu 依靠 OS-Prober 来检查其他已安装的操作系统，以便能够方便地在 GRUB 引导程序中显示它们。这意味着随着 Ubuntu 22.04 转向 GRUB 2.06，非 UEFI BIOS 用户不能再启动任何其他操作系统，而基于 UEFI 的系统如果通过 UEFI 引导程序，则仍然可以启动其他操作系统。这个问题主要是会阻碍那些仍然运行传统 BIOS 启动程序的用户使用已安装的系统。</p>

<p>默认禁用OS-Prober旨在通过操作系统检测功能解决潜在的安全问题，因为它在检查其他操作系统时，会检查并挂载系统上的所有分区，如果利用文件系统的漏洞，启用该功能会引发一个能被黑客利用的安全问题。</p>

<p>因此，面对安全和用户体验这个两难的选择下，Ubuntu 开发者也不得不考虑是否要重新启用 OS-Prober。</p>

<p>因为 OS_Prober 存在潜在安全风险，所以重新启用它并不是一个理想的解决方案，目前 Ubuntu 团队内部也在仔细思考这个问题，但不排除这个可能性。</p>

<p>Ubuntu 团队考虑的其他解决方案包括：创建一个新的 GRUB 模块，该模块只在用户查找系统时才执行 OS-Prober 的一些功能，用于增加一个链式启动选项专门处理用户需要启动 Windows 的需求；亦或是仅在安装系统时运行 OS-Prober，然后依靠该信息进行后续启动；最后一种可能性是，从以前的 Ubuntu 版本升级到 Ubuntu 22.04 时启用 OS-Prober。</p>

<p>我们还不清楚 Ubuntu 团队在上述选择中最终会如何进行抉择，在 Ubuntu 22.04 正式推出之前还有充足的考虑时间，可以访问 ubuntu-devel 了解更多详情。我们也将关注 GRUB 上游在此期间是否也会推出相应的解决方案。</p>
]]></content>
  </entry>
  
</feed>
