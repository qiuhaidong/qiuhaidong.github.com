<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | 丘海东]]></title>
  <link href="https://qiuhaidong.github.io/blog/categories/tech/atom.xml" rel="self"/>
  <link href="https://qiuhaidong.github.io/"/>
  <updated>2022-03-02T16:37:48+08:00</updated>
  <id>https://qiuhaidong.github.io/</id>
  <author>
    <name><![CDATA[丘海东]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ubuntu2022年无法添加引导windows，官方禁用OS Prober]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/15/ubuntu-cannot-boot-windows/"/>
    <updated>2022-01-15T15:34:36+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/15/ubuntu-cannot-boot-windows</id>
    <content type="html"><![CDATA[<h3><a href="https://www.oschina.net/news/174751/ubuntu-22.04-multi-boot-changes">原博：OS Prober 被禁用，Ubuntu 正在考虑新的多重引导方案</a></h3>

<p>GNU GRUB（GRUB）是一个来自 GNU 项目的启动引导程序。它允许用户在计算机内同时拥有多个操作系统，并在计算机启动时选择希望运行的操作系统。</p>

<p>今年 6 月，由于上游 GRUB 引导程序在发布 2.06 版本时禁用 OS_Prober 后所带来的一些变化，Ubuntu 的开发者正在考虑如何在 Ubuntu 22.04 LTS 中管理双引导/多引导方案。</p>

<p>Ubuntu 依靠 OS-Prober 来检查其他已安装的操作系统，以便能够方便地在 GRUB 引导程序中显示它们。这意味着随着 Ubuntu 22.04 转向 GRUB 2.06，非 UEFI BIOS 用户不能再启动任何其他操作系统，而基于 UEFI 的系统如果通过 UEFI 引导程序，则仍然可以启动其他操作系统。这个问题主要是会阻碍那些仍然运行传统 BIOS 启动程序的用户使用已安装的系统。</p>

<p>默认禁用OS-Prober旨在通过操作系统检测功能解决潜在的安全问题，因为它在检查其他操作系统时，会检查并挂载系统上的所有分区，如果利用文件系统的漏洞，启用该功能会引发一个能被黑客利用的安全问题。</p>

<p>因此，面对安全和用户体验这个两难的选择下，Ubuntu 开发者也不得不考虑是否要重新启用 OS-Prober。</p>

<p>因为 OS_Prober 存在潜在安全风险，所以重新启用它并不是一个理想的解决方案，目前 Ubuntu 团队内部也在仔细思考这个问题，但不排除这个可能性。</p>

<p>Ubuntu 团队考虑的其他解决方案包括：创建一个新的 GRUB 模块，该模块只在用户查找系统时才执行 OS-Prober 的一些功能，用于增加一个链式启动选项专门处理用户需要启动 Windows 的需求；亦或是仅在安装系统时运行 OS-Prober，然后依靠该信息进行后续启动；最后一种可能性是，从以前的 Ubuntu 版本升级到 Ubuntu 22.04 时启用 OS-Prober。</p>

<p>我们还不清楚 Ubuntu 团队在上述选择中最终会如何进行抉择，在 Ubuntu 22.04 正式推出之前还有充足的考虑时间，可以访问 ubuntu-devel 了解更多详情。我们也将关注 GRUB 上游在此期间是否也会推出相应的解决方案。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搜狗输入法]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/15/sougou-is-xiugou/"/>
    <updated>2022-01-15T14:51:13+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/15/sougou-is-xiugou</id>
    <content type="html"><![CDATA[<p>就是个坑，有时安装了就能用，有时搞到所有的输入法都用不了，要卸载了才能恢复之前的输入法</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ok 好累]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/15/done-tired/"/>
    <updated>2022-01-15T03:23:36+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/15/done-tired</id>
    <content type="html"><![CDATA[<p>睡觉</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Post文件模板]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/15/model/"/>
    <updated>2022-01-15T03:18:34+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/15/model</id>
    <content type="html"><![CDATA[<p>layout: post<br/>
title: <br/>
date: <br/>
tags: <br/>
author: 丘海东<br/>
comments: <br/>
categories:</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No Binary Rubies Available for: ubuntu/20.04/x86_64/ruby-2.2.6]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/12/no-binary-rubies-available-for-ubuntu-slash-20-dot-04-slash-x86-64-slash-ruby-2-dot-2-6/"/>
    <updated>2022-01-12T19:03:01+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/12/no-binary-rubies-available-for-ubuntu-slash-20-dot-04-slash-x86-64-slash-ruby-2-dot-2-6</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41988167/article/details/106202868">No binary rubies available for: ubuntu/20.04/x86_64/ruby-2.2.6;;Error running requirements_debian_libs_install libssl1.0-dev</a></p>

<p>原博内容：</p>

<p>rvm安装低版本ruby报错Error running ‘requirements_debian_libs_install libssl1.0-dev’,Requirements installation failed with status: 100.</p>

<p>由于参与的一个项目在用2.3.1版本的ruby，所以想用rvm来安装ruby2.3.1。运行报错，需要libssl1.0-dev.<br/>
解决办法：</p>

<ul>
<li>运行</li>
</ul>


<pre><code>sudo gedit /etc/apt/sources.list
</code></pre>

<p>在<code>/etc/apt/sources.list</code> 中添加下载源 <code>deb http://security.ubuntu.com/ubuntu bionic-security main</code>。保存退出。</p>

<ul>
<li>更新</li>
</ul>


<pre><code>sudo apt update
</code></pre>

<ul>
<li>安装</li>
</ul>


<pre><code>apt-cache policy libssl1.0-dev  #（这步我没有做，先不做）
</code></pre>

<p>然后再安装<code>rvm install 2.2.6</code></p>

<p>————————————————<br/>
版权声明：本文为CSDN博主「会打滚的咸鱼」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：<a href="https://blog.csdn.net/qq_41988167/article/details/106202868">https://blog.csdn.net/qq_41988167/article/details/106202868</a></p>
]]></content>
  </entry>
  
</feed>
