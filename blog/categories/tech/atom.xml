<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | 丘海东]]></title>
  <link href="https://qiuhaidong.github.io/blog/categories/tech/atom.xml" rel="self"/>
  <link href="https://qiuhaidong.github.io/"/>
  <updated>2025-09-30T10:21:05+08:00</updated>
  <id>https://qiuhaidong.github.io/</id>
  <author>
    <name><![CDATA[丘海东]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[改hosts文件，指定IP]]></title>
    <link href="https://qiuhaidong.github.io/blog/2025/04/24/ipaddress/"/>
    <updated>2025-04-24T23:47:10+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2025/04/24/ipaddress</id>
    <content type="html"><![CDATA[<p>网站无法访问，则改hosts文件，指定IP<br/>
到：<a href="https://www.ipaddress.com/">https://www.ipaddress.com</a>，找到网站的IP<br/>
<code>
sudo gedit /etc/hosts
</code>
格式：IP (空格) 域名，如：<code>140.82.114.36      ssh.github.com</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu24.04 修复引导]]></title>
    <link href="https://qiuhaidong.github.io/blog/2025/04/23/ubuntu-24-04-boot-repair/"/>
    <updated>2025-04-23T04:26:33+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2025/04/23/ubuntu-24-04-boot-repair</id>
    <content type="html"><![CDATA[<p><a href="https://shuyeidc.com/wp/75597.html">原文：Ubuntu引导修复grub</a><br/>
制作一个Ubuntu系统盘，try Ubuntu<br/>
<code>
sudo add-apt-repository ppa:yannubuntu/boot-repair
sudo apt-get update
sudo apt-get install boot-repair
</code>
注意，添加软件源才能安装<br/>
打开软件，选择“推荐修复”，等待完成<br/>
好了，开机<br/>
<code>
sudo update-grub
</code>
用grub customizer，调整一下</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 24.04 安装 Octopress2.0和3.0]]></title>
    <link href="https://qiuhaidong.github.io/blog/2025/04/09/ubuntu24-dot-04-install-octopress-2-and-3/"/>
    <updated>2025-04-09T03:07:13+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2025/04/09/ubuntu24-dot-04-install-octopress-2-and-3</id>
    <content type="html"><![CDATA[<p>软件源是：主服务器<br/>
参考<a href="https://qiuhaidong.github.io/blog/2022/04/05/octopress2-and-3-on-ubuntu-22-04/">Ubuntu22.04的安装</a><br/>
把octopress、haydnyau、ssh2、ssh3文件夹、.gitconfig、及其他.sh脚本文件等，复制过来。<br/>
依赖：python2，ruby2.6.9</p>

<!--more-->


<pre><code>git --version
sudo apt install git
git --version
</code></pre>

<p>.ssh2和.ssh3（密码dg&rsquo;s nlsr）文件夹分别改名.shh，验证</p>

<pre><code>ssh -T git@github.com
</code></pre>

<p><a href="https://qiuhaidong.github.io/blog/2025/04/08/how-to-install-python-2-dot-7-on-ubuntu-24-dot-04/">安装Python 2</a></p>

<pre><code>sudo apt update 

sudo apt install -y build-essential checkinstall libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev
</code></pre>

<p>很长的一段命令执行提示</p>

<pre><code>wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz
</code></pre>

<p>或者自己已经下载保存了文件包</p>

<pre><code>tar -xvf Python-2.7.18.tgz

cd Python-2.7.18

./configure --enable-optimizations

make -j16
</code></pre>

<p>很长的一段，时间也很长，10分钟左右，耐心等待</p>

<pre><code>sudo make install

python -V
</code></pre>

<p>返回上级目录</p>

<pre><code>cd ``
</code></pre>

<p>更改优先级并将 Python2 设置在顶部，以便应用程序可以将其作为默认版本调用。而 Python3 将位居第二。</p>

<pre><code>sudo update-alternatives --install /usr/bin/python python /usr/local/lib/python2.7 1

sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 2

python -V
</code></pre>

<p>安装ruby</p>

<pre><code>ruby --version
</code></pre>

<p>到rvm官网(下面的命令可能有更新，看官网)</p>

<pre><code>sudo apt install gnupg2

gpg2 --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

sudo snap install curl #(注意，不要apt，要snap)
</code></pre>

<p>要很长时间，输出很多</p>

<p>先安装编辑器：</p>

<pre><code>sudo apt install gedit
</code></pre>

<p>到这个网址：<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a><br/>
去 Lookup any IP Address or Website 项，找到这个网址 raw.githubusercontent.com 的IP：
以下面的格式，添加到这个文件 /etc/hosts。</p>

<pre><code>185.199.108.133  raw.githubusercontent.com
185.199.109.133  raw.githubusercontent.com
185.199.110.133  raw.githubusercontent.com
185.199.111.133  raw.githubusercontent.com


sudo gedit /etc/hosts


curl -sSL https://get.rvm.io | bash -s stable
</code></pre>

<p>安装完成，看看提示</p>

<pre><code>source /home/dong/.rvm/scripts/rvm

rvm --version


rvm pkg install openssl
</code></pre>

<p>有可能会失败，估计是网络翻墙等的问题，看提示，多试几次，直到成功为止</p>

<pre><code>rvm install 2.6.9 -C --with-openssl-dir=$HOME/.rvm/usr

ruby --version
</code></pre>

<p>记得：终端-首选项-未命名-命令-勾选‘以登陆shell方式运行命令’，重启所有终端</p>

<pre><code>rvm use 2.6.9 --default


cd octopress/

完整复制下面这行，要安装指定版本
gem install bundler -v 2.4.22
</code></pre>

<p>dg，看提示，版本问题对应</p>

<pre><code>bundle install
</code></pre>

<p>到这个文件，/home/dong/.rvm/gems/ruby-2.6.9/gems/compass-core-1.0.3/stylesheets/compass/css3/_deprecated-support.scss</p>

<pre><code>gedit /home/dong/.rvm/gems/ruby-2.6.9/gems/compass-core-1.0.3/stylesheets/compass/css3/_deprecated-support.scss
</code></pre>

<p>改文件87行，To fix the error message, just change the line 87 from your “_deprecated-support.scss” file to this:</p>

<pre><code>    // A debug tool for checking browser support
@mixin debug-support-matrix($experimental: true, $ie: true) {
    @debug '#{"$moz-"}$experimental-support-for-mozilla'
                 '#{"$webkit-"}$experimental-support-for-webkit'
                 '#{"$opera-"}$experimental-support-for-opera'
                 '#{"$microsoft-"}$experimental-support-for-microsoft'
                 '#{"$khtml-"}$experimental-support-for-khtml';
    @debug '#{"$ie6-"}$legacy-support-for-ie6'
                 '#{"$ie7-"}$legacy-support-for-ie7'
                 '#{"$ie8-"}$legacy-support-for-ie8';
}
</code></pre>

<h3>Octopress 3.0</h3>

<pre><code>cd /haydnyau
</code></pre>

<pre><code>ruby --version
rvm use 2.6.9 --default
</code></pre>

<pre><code>jekyll --version
</code></pre>

<p>确保安装正确<br/>
安装好Octopress 2.0之后，其他的依赖都安装好了，只需要：<br/>
<code>
gem install octopress
</code>
有时网络问题，多试几次，确保安装正确，成功，曾试过因为系统自带了ruby3.0，导致ruby版本不对，失败的<br/>
好了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Python 2.7 on Ubuntu 24.04]]></title>
    <link href="https://qiuhaidong.github.io/blog/2025/04/08/how-to-install-python-2-dot-7-on-ubuntu-24-dot-04/"/>
    <updated>2025-04-08T23:14:16+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2025/04/08/how-to-install-python-2-dot-7-on-ubuntu-24-dot-04</id>
    <content type="html"><![CDATA[<p>机翻的文章，可能有错，建议看原文，链接：</p>

<p><a href="https://linux.how2shout.com/how-to-install-python-2-7-on-ubuntu-24-04-noble-lts-linux/">How to install Python 2.7 on Ubuntu 24.04</a></p>

<!--more-->


<p>Canonical 在长期 Ubuntu 20.04 Focal 之后放弃了对 Python 版本 2.x 的支持，以便为最新的 Python 3 版本腾出空间。这就是为什么我们没有使用其官方系统存储库在 Ubuntu 24.04 上安装 Python 2 的原因。此外，Python 开发人员也不再支持版本 2，但是，如果您的一些旧项目需要 Python 版本 2，那么在本文中，我们将学习如何在 Ubuntu 24.04上安装它来运行一些旧的应用程序。</p>

<p>第 1 步：打开命令终端<br/>
第 2 步：安装依赖项<br/>
第 3 步：下载 Python 2.7 源代码<br/>
第 4 步：在 Ubuntu 2.7 上编译和安装 Python 24.04<br/>
第 5 步：验证安装<br/>
<del>第 6 步：为 Python 2.7 设置 pip</del><br/>
第 7 步：更改默认 Python 优先级<br/>
第 8 步：从 Ubuntu 2.7 卸载 Python 24.04</p>

<h3>第 1 步：打开命令终端</h3>

<p>在您的 Ubuntu 上访问终端，因为我们需要它来安装软件包，因此您应该对它以及命令行的工作原理有所了解。进入终端后，运行 system update 命令：</p>

<pre><code>sudo apt update 
(dg不要后面这一步，以防新版本的ubuntu有问题，安装不了博客)sudo apt upgrade
</code></pre>

<h3>第 2 步：安装依赖项</h3>

<p>众所周知，Python 2.7 不再通过 Ubuntu 的默认系统存储库甚至流行的 PPA Dead Snake 存储库获得，因此在本文中，我们将使用其源文件对其进行编译。但是，在此之前，请安装一些基本的开发人员工具。</p>

<pre><code>sudo apt install -y build-essential checkinstall libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev
</code></pre>

<h3>第 3 步：下载 Python 2.7 源代码</h3>

<p>现在，使用 wget 工具并从其官方网站下载 Python 2.7 的源代码，2.7 可用的最新版本是 2.7.18。</p>

<pre><code>wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz
</code></pre>

<p>解压 ：</p>

<pre><code>tar -xvf Python-2.7.18.tgz
</code></pre>

<h3>第 4 步：在 Ubuntu 2.7 上编译和安装 Python 24.04</h3>

<p>解压后，首先切换到解压后的目录，然后按照给定的过程编译源码。</p>

<pre><code>cd Python-2.7.18

./configure --enable-optimizations
</code></pre>

<p>编译安装 Python：</p>

<p>编译过程需要一些时间，所以请坐下来，让它完成。</p>

<pre><code>make -j16

sudo make install
</code></pre>

<h3>第 5 步：验证安装</h3>

<p>安装“make”文件后，您的 Ubuntu 24.04 系统将安装 Python 2.7。要确认，只需通过运行给定的命令来检查版本：</p>

<pre><code>python -V
</code></pre>

<h3><del>第 6 步：为 Python 2.7 设置 pip</del></h3>

<p><del>在 Ubuntu 24.04 上安装 Python 2.7 后，您可能还需要 PIP 来管理库和包，因此要获取它，以下是命令：</del></p>

<pre><code>~~sudo apt install curl~~  

~~curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py~~  

~~sudo python2.7 get-pip.py~~  
</code></pre>

<p><del>验证 pip 安装：</del></p>

<pre><code>~~pip2.7 --version~~
</code></pre>

<h3>第 7 步：更改默认 Python 优先级</h3>

<p>如果您的 Ubuntu 2.7 Linux 上同时有 Python 3 和 24.04，则默认情况下系统会优先考虑 Python3，这就是为什么当我们运行“命令时，它会给出错误：</p>

<pre><code>Command 'python' not found, did you mean:
command 'python 3' from deb python3
command 'python' from deb python-is-python3
</code></pre>

<p>因此，我们将更改优先级并将 Python2 设置在顶部，以便应用程序可以将其作为默认版本调用。而 Python3 将位居第二。</p>

<p>设置替代方案：</p>

<pre><code>sudo update-alternatives --install /usr/bin/python python /usr/local/lib/python2.7 1

sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 2
</code></pre>

<p>现在，检查默认版本：</p>

<pre><code>python -V
</code></pre>

<p>将来，如果您想将 Python 3 设置为优先级列表中的默认版本或第一个版本，只需使用以下命令更新替代列表：</p>

<pre><code>sudo update-alternatives --config python
</code></pre>

<p>您将获得类似于以下屏幕截图的内容，并可选择将一个设置为优先级。要进行选择，请在 Selection 列下输入与每个版本路径对应的数字，然后按 Enter 键。</p>

<p>将 Python 2.7 或 3 设置为 Ubuntu 24.04 上的默认值</p>

<h3>第 8 步：从 Ubuntu 2.7 卸载 Python 24.04</h3>

<p>如果您的系统上不需要 Python 2.7，那么以下是将其完全删除的命令：</p>

<pre><code>sudo rm -rf /usr/local/bin/python2.7
sudo rm -rf /usr/local/bin/python2.7-config
sudo rm -rf /usr/local/lib/python2.7
sudo rm -rf /usr/local/include/python2.7
sudo rm -rf /usr/local/share/man/man1/python2.7.1
</code></pre>

<p>删除在安装过程中创建的符号链接：</p>

<pre><code>sudo rm /usr/local/bin/python2
sudo rm /usr/local/bin/python
</code></pre>

<p>更新 update-alternatives 系统</p>

<pre><code>sudo update-alternatives --remove python /usr/local/bin/python2.7
</code></pre>

<p>您可能希望将另一个 Python 版本设置为默认版本：</p>

<pre><code>sudo update-alternatives --config python
</code></pre>

<p>删除 Python 2.7 pip 和其他相关工具</p>

<pre><code>sudo rm /usr/local/bin/pip2.7
sudo rm -rf /usr/local/lib/python2.7/site-packages
</code></pre>

<p>清理剩余文件</p>

<pre><code>rm -rf ~/.local/lib/python2.7
rm -rf ~/.local/bin/pip2
rm -rf ~/.cache/pip
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu24.04 设置充电保护]]></title>
    <link href="https://qiuhaidong.github.io/blog/2025/04/08/ubuntu-charge-protect/"/>
    <updated>2025-04-08T18:11:10+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2025/04/08/ubuntu-charge-protect</id>
    <content type="html"><![CDATA[<p><strong>编辑这个文件，把数值0（关闭）改为1（开启充电保护模式），保存</strong></p>

<pre><code>/sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode
</code></pre>

<p>编写一个battery-protect.sh脚本（名字随便），添加命令：</p>

<pre><code>sudo gedit /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode
</code></pre>

<p>之后开机时，执行，改数值为1</p>

<!--more-->


<p>安装 TLP：<strong>虽然我试过没什么作用</strong>，<strong><em>只能用来看看充电状态</em></strong></p>

<pre><code>sudo apt install tlp
sudo gedit /etc/tlp.conf
</code></pre>

<p>找到以下两行（Ctrl+F），取消注释（删除开头的#），然后根据需要更改数字(充电到百分之几)。<br/>
<strong>DG：改了也没什么作用</strong></p>

<pre><code>START_CHARGE_THRESH_BAT0=70
STOP_CHARGE_THRESH_BAT0=80
</code></pre>

<p>保存<br/>
运行命令<strong>检查充电状态</strong> ：</p>

<pre><code>sudo tlp-stat -b
</code></pre>

<p><img src="https://storage.deepin.org/thread/202303052303521160_image.png" alt="" /></p>

<p>参考：
<a href="https://cn.linux-terminal.com/?p=7554">如何在 Ubuntu 22.04 和 24.04 中设置电池充电限制</a><br/>
<a href="https://bbs.deepin.org/post/253376">笔记本充电阈值限制（以联想拯救者Y7000P2020H为例）</a></p>
]]></content>
  </entry>
  
</feed>
