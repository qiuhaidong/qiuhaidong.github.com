<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: octopress2.0 | 丘海东]]></title>
  <link href="https://qiuhaidong.github.io/tags/octopress2-dot-0/atom.xml" rel="self"/>
  <link href="https://qiuhaidong.github.io/"/>
  <updated>2025-04-22T14:57:07+08:00</updated>
  <id>https://qiuhaidong.github.io/</id>
  <author>
    <name><![CDATA[丘海东]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[curl: (7) Failed to connect to raw.githubusercontent.com port 443 after 28 ms: 拒绝连接]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/05/27/curl-7-failed-to-connect-to-raw-dot-githubusercontent-dot-com-port-443-after-28-ms-ju-jue-lian-jie/"/>
    <updated>2022-05-27T15:19:28+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/05/27/curl-7-failed-to-connect-to-raw-dot-githubusercontent-dot-com-port-443-after-28-ms-ju-jue-lian-jie</id>
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u014375643/article/details/115826506">问题解决：curl: (7) Failed to connect to raw.githubusercontent.com port 443: 拒绝连接</a><br/>
<a href="https://qiuhaidong.github.io/blog/2022/04/05/octopress2-on-ubuntu-22-dot-04/">https://qiuhaidong.github.io/blog/2022/04/05/octopress2-on-ubuntu-22-dot-04/</a><br/>
<code>
sudo apt install curl
curl -sSL https://get.rvm.io | bash -s stable
</code>
提示：<br/>
<code>
curl: (7) Failed to connect to raw.githubusercontent.com port 443 after 28 ms: 拒绝连接
</code>
解决：<br/>
<a href="https://blog.csdn.net/u014375643/article/details/115826506">Failed to connect to raw.githubusercontent.com</a><br/>
到这个网址：<code>https://www.ipaddress.com/</code>，输入：<code>raw.githubusercontent.com</code>，查询，得到IP地址，选择其中一个或多个，修改本地HOSTS：Ubuntu下打开/etc/hosts，添加 IP地址：<code>185.199.108.133 raw.githubusercontent.com</code>，重试，不行就重启再试。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装Ruby2.6.9，Error running '__rvm_make -j4']]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/04/05/install-ruby2.6.9-error-running-rvm-make-j4/"/>
    <updated>2022-04-05T22:22:58+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/04/05/install-ruby2.6.9-error-running-rvm-make-j4</id>
    <content type="html"><![CDATA[<pre><code>rvm install 2.6.9
</code></pre>

<p>提示错误：<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error running &lsquo;__rvm_make -j4&rsquo;,
</span><span class='line'>please read /home/dong/.rvm/log/1649165570_ruby-2.6.9/make.log&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;There has been an error while running make. Halting the installation.
</span><span class='line'>&hellip;&hellip;</span></code></pre></td></tr></table></div></figure>
<a href="https://github.com/rvm/rvm/issues/4370">Error running &lsquo;__rvm_make -j4&rsquo; ruby 2.6.9 Ubuntu 22.04 </a><br/>
<strong>解决：</strong></p>

<pre><code>rvm pkg install openssl
rvm remove 2.6.9
rvm install 2.6.9 -C --with-openssl-dir=$HOME/.rvm/usr
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 22.04安装Octopress 2.0和3.0]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/04/05/octopress2-and-3-on-ubuntu-22-04/"/>
    <updated>2022-04-05T22:03:16+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/04/05/octopress2-and-3-on-ubuntu-22-04</id>
    <content type="html"><![CDATA[<p><a href="https://qiuhaidong.github.io/blog/2025/04/09/ubuntu24-dot-04-install-octopress-2-and-3/">Ubuntu24.04安装</a><br/>
以后重装系统，记得把octopress、haydnyau、ssh2、ssh3文件夹、.gitconfig，打包备份，并上传网盘。<br/>
依赖：python2，ruby2.6.9</p>

<h3>Octopress 2.0</h3>

<pre><code>git --version
sudo apt install git
</code></pre>

<p>然后配置git，把之前的octopress-haydnyau和ssh2-ssh3文件夹和.gitconfig文件复制到主目录，改ssh文件夹名<br/>
<code>
ssh -T git@github.com
</code>
ok<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python2 &ndash;version
</span><span class='line'>sudo apt install python2&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ruby &ndash;version
</span><span class='line'>&lt;code&gt;
</span><span class='line'>没有  
</span><span class='line'>到rvm官网(下面的命令可能有更新，看官网)  
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>gpg2 &ndash;recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
</span><span class='line'>&lt;code&gt;
</span><span class='line'>提示：  
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>Command &lsquo;gpg2&rsquo; not found, but can be installed with:
</span><span class='line'>sudo apt install gnupg2
</span><span class='line'>&lt;code&gt;
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>sudo apt install gnupg2
</span><span class='line'>gpg2 &ndash;recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;curl -sSL &lt;a href="https://get.rvm.io"&gt;https://get.rvm.io&lt;/a&gt; | bash -s stable
</span><span class='line'>&lt;code&gt;
</span><span class='line'>提示：  
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>Command &lsquo;curl&rsquo; not found, but can be installed with:
</span><span class='line'>dg不要这样安装sudo apt install curl</span></code></pre></td></tr></table></div></figure></p>

<h3>注意: <a href="https://qiuhaidong.github.io/blog/2023/09/01/install-curl/">安装新版本的curl</a></h3>

<h3>否则会出错</h3>

<pre><code>dong@dong-Ubuntu:~$ curl -V

找不到命令 “curl”，但可以通过以下软件包安装它：
sudo snap install curl  # version 8.1.2, or
dg不要这样安装sudo apt  install curl  # version 7.81.0-1ubuntu1.13
输入 “snap info curl” 以查看更多版本。

dong@dong-Ubuntu:~$ sudo snap install curl
</code></pre>

<h3>不要下面这个了:</h3>

<pre><code>dg不要这样安装sudo apt install curl
curl -sSL https://get.rvm.io | bash -s stable
</code></pre>

<p>提示：<br/>
<code>
curl: (7) Failed to connect to raw.githubusercontent.com port 443 after 28 ms: 拒绝连接
</code>
解决：<br/>
<a href="https://blog.csdn.net/u014375643/article/details/115826506">Failed to connect to raw.githubusercontent.com</a><br/>
到这个网址：<code>https://www.ipaddress.com/</code>，输入：<code>raw.githubusercontent.com</code>，查询，得到IP地址，选择其中一个或多个，修改本地HOSTS：Ubuntu下打开/etc/hosts，添加 IP地址：<code>185.199.108.133 raw.githubusercontent.com</code>，重试，不行就重启再试。<br/>
<code>
curl -sSL https://get.rvm.io | bash -s stable
</code>
提示：<br/>
<code>  
* To start using RVM you need to run `source /home/dong/.rvm/scripts/rvm`
    in all your open shell windows, in rare cases you need to reopen all shell windows.
Thanks for installing RVM
</code>
<code>
source /home/dong/.rvm/scripts/rvm
</code>
重启命令行<br/>
<code>
rvm --version
rvm install 2.6.9
</code>
提示错误：<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error running &lsquo;__rvm_make -j4&rsquo;,
</span><span class='line'>please read /home/dong/.rvm/log/1649165570_ruby-2.6.9/make.log&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;There has been an error while running make. Halting the installation.
</span><span class='line'>&hellip;&hellip;</span></code></pre></td></tr></table></div></figure></p>

<p><strong>解决：</strong><br/>
<a href="https://github.com/rvm/rvm/issues/4370">Error running &lsquo;__rvm_make -j4&rsquo; ruby 2.6.9 Ubuntu 22.04 </a></p>

<pre><code>rvm pkg install openssl
rvm remove 2.6.9
rvm install 2.6.9 -C --with-openssl-dir=$HOME/.rvm/usr
</code></pre>

<pre><code>ruby --version
</code></pre>

<h4>记得：终端-首选项-未命名-命令-勾选‘以登陆shell方式运行命令’，重启所有终端</h4>

<pre><code>rvm use 2.6.9 --default
</code></pre>

<p>把 <code>/octopress/Gemfile</code> 文件里的源改回最初的：<code>source "https://rubygems.org/"</code></p>

<pre><code>gem install bundler
bundle install
</code></pre>

<p><a href="https://qiuhaidong.github.io/blog/2022/03/26/you-can-use-the-sass-convert-command-to-automatically-fix-most-cases/">更改：You can use the sass-convert command to automatically fix most cases.</a></p>

<pre><code>rake generate
......
</code></pre>

<p>之后就都是常规操作。</p>

<h3>Octopress 3.0</h3>

<pre><code>cd /haydnyau
</code></pre>

<pre><code>ruby --version
rvm use 2.6.9 --default
</code></pre>

<pre><code>jekyll --version
</code></pre>

<p>确保安装正确<br/>
安装好Octopress 2.0之后，其他的依赖都安装好了，只需要：<br/>
<code>
gem install octopress
</code>
确保安装正确，成功，曾试过因为系统自带了ruby3.0，导致ruby版本不对，失败的<br/>
好了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加速Octopress2.0，太慢了]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/02/27/speed-up-octopress2-dot-0/"/>
    <updated>2022-02-27T00:54:38+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/02/27/speed-up-octopress2-dot-0</id>
    <content type="html"><![CDATA[<h2><a href="https://droidyue.com/blog/2014/06/22/fix-octopress-slow-loading-speed-issue-in-china-mainland/">原博</a></h2>

<h2>清理没用的服务</h2>

<p>以下修改均修改<code>_config.yml</code>,以下可以根据自己的需要进行去除。</p>

<p><strong>去除Disqus评论</strong><br/>
打开文件找到<code>Disqus Comments</code>，按照下面在每一行前面加#注释掉即可</p>

<pre><code># Disqus Comments
#disqus_short_name: 
#disqus_show_comment_count: true
</code></pre>

<p><strong>去掉Github仓库展示</strong></p>

<pre><code># Github repositories
#github_user: 
#github_repo_count: 
#github_show_profile_link: true
#github_skip_forks: true
</code></pre>

<p><strong>去除Twitter按钮</strong><br/>
<strong>去除Google+相关</strong><br/>
<strong>去除Pinboard服务</strong><br/>
<strong>去除Delicious评论，去除后可能没有评论系统</strong><br/>
<strong>去除Facebook Like</strong></p>

<h2>替换快速的请求资源</h2>

<p>其实，真正解决加速的重要环节可能是这里，因为Octopress很多依赖于Google的库和资源。</p>

<h3>解决Google Analytics巨慢的问题</h3>

<p>对于使用Google Analytics来说，加在ga.js这个文件简直是要命的慢，这里我使用自己存放在七牛CDN上的js.  <a href="http://droidyue-tools.qiniudn.com/ga.js">http://droidyue-tools.qiniudn.com/ga.js</a> 已验证，完全可以正常收集数据。<br/>
参考如下，修改<code>source/_includes/google_analytics.html</code></p>

<pre><code class="html"> _gaq.push(['_trackPageview']);

 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src='http://droidyue-tools.qiniudn.com/ga.js';
 var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
 })();
   &lt;/script&gt;
</code></pre>

<h3>解决fonts.googleapis.com蜗牛慢</h3>

<p>这里我们使用数字公司提供的Google Fonts大陆解决方案，使用<code>fonts.useso.com</code>替换<code>fonts.googleapis.com</code>。<br/>
修改文件<code>/source/_includes/custom/head.html</code></p>

<pre><code class="html"> &lt;!--Fonts from Google"s Web font directory at http://google.com/webfonts --&gt;
&lt;link href="http://fonts.useso.com/css?family=PT+Serif:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css"&gt;
&lt;link href="http://fonts.useso.com/css?family=PT+Sans:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css"&gt;
</code></pre>

<h3>解决ajax.googleapis.com慢的问题</h3>

<p>修改<code>source/_includes/head.html</code></p>

<pre><code class="html">&lt;script src="//ajax.useso.com/ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script&gt;!window.jQuery &amp;&amp; document.write(unescape('%3Cscript src="./javascripts/lib/jquery.min.js"%3E%3C/script%3E'))&lt;/script&gt;
&lt;script src="https://qiuhaidong.github.io/javascripts/octopress.js" type="text/javascript"&gt;&lt;/script&gt;
</code></pre>

<h3>總結</h3>

<p>导致网站慢的原因其实是加载Google的资源，当然我们不能怨Google.经过测试，使用数字公司的解决方法之后，国内国外访问速度都是可以的。这里还是推荐以下数字公司的这个解决方案<a href="http://libs.useso.com/">http://libs.useso.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[侧边栏增加分类 category]]></title>
    <link href="https://qiuhaidong.github.io/blog/2022/01/10/add-category/"/>
    <updated>2022-01-10T23:00:59+08:00</updated>
    <id>https://qiuhaidong.github.io/blog/2022/01/10/add-category</id>
    <content type="html"><![CDATA[<h3>三步</h3>

<h2>Step 1</h2>

<h3>添加 <code>category_list</code> 插件</h3>

<p>在 <code>octopress\plugins\</code> 文件夹里面，新建一个文件，名为：<code>category_list_tag.rb</code>。并将下面的代码粘贴到里面。</p>

<pre><code>module Jekyll
  class CategoryListTag &lt; Liquid::Tag
    def render(context)
      html = ""
      categories = context.registers[:site].categories.keys
      categories.sort.each do |category|
        posts_in_category = context.registers[:site].categories[category].size
       category_dir = context.registers[:site].config['category_dir']
        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='https://qiuhaidong.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
      end
      html
    end
  end
end

Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></pre>

<p>这个插件会向<code>liquid</code>注册一个名为<code>category_list</code>的<code>tag</code>，该<code>tag</code>就是以<code>li</code>的形式将站点所有的<code>category</code>组织起来。如果要将<code>category</code>加入到侧边导航栏，需要增加一个<code>aside</code>。</p>

<h2>Step 2</h2>

<h3>增加 <code>aside</code></h3>

<p>在 <code>octopress\source\_includes\asides\</code> 文件夹里面，新建一个文件，名为：<code>category_list.html</code> 。并粘贴下面的代码：</p>

<p><strong>注意</strong>： 去掉 <code>%</code> 前面的2个 <code>\</code><br/>
这里如果不加上<code>\</code>，markdown格式会显示<code>category_list</code>的内容。我是为了正确显示代码才加上的</p>

<pre><code>&lt;section&gt;
  &lt;h1&gt;Categories&lt;/h1&gt;
  &lt;ul id="categories"&gt;
    {\% category_list \%}
  &lt;/ul&gt;
&lt;/section&gt;
</code></pre>

<h2>Step 3</h2>

<h3><code>_config.yml</code> 文件 ，修改 <code>default_asides</code></h3>

<p>打开 <code>octopress\_config.yml</code> 文件，修改里面的 <code>default_asides</code> 这一行，将 <code>asides/category_list.html</code> 添加进去。</p>

<pre><code>default_asides: [asides/category_list.html, ......]
</code></pre>

<p>这里可以修改侧边栏的顺序</p>

<h2>ok</h2>

<p><a href="http://www.aobosir.com/blog/2016/10/12/octopress-build-static-blog-site-add-categories-list-for-site-sidebar/">原博</a></p>
]]></content>
  </entry>
  
</feed>
